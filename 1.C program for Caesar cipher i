#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt the plaintext using Caesar Cipher
void encrypt(char* plaintext, char* ciphertext, int shift) {
    int i;
    for (i = 0; plaintext[i] != '\0'; i++) {
        char letter = plaintext[i];

        if (isalpha(letter)) {
            char base = isupper(letter) ? 'A' : 'a';
            ciphertext[i] = (letter - base + shift) % 26 + base;
        } else {
            ciphertext[i] = letter;  // Non-alphabet characters remain the same
        }
    }
    ciphertext[i] = '\0';  // Null-terminate the ciphertext string
}

// Function to decrypt the ciphertext using Caesar Cipher
void decrypt(char* ciphertext, char* decryptedText, int shift) {
    int i;
    for (i = 0; ciphertext[i] != '\0'; i++) {
        char letter = ciphertext[i];

        if (isalpha(letter)) {
            char base = isupper(letter) ? 'A' : 'a';
            decryptedText[i] = (letter - base - shift + 26) % 26 + base;
        } else {
            decryptedText[i] = letter;  // Non-alphabet characters remain the same
        }
    }
    decryptedText[i] = '\0';  // Null-terminate the decrypted text
}

int main() {
    char plaintext[100], ciphertext[100], decryptedText[100];
    int shift;

    // Input plaintext and shift value
    printf("Enter a message to encrypt: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // Remove newline character

    printf("Enter shift value (1-25): ");
    scanf("%d", &shift);

    // Validate shift range
    if (shift < 1 || shift > 25) {
        printf("Invalid shift value! Please enter a number between 1 and 25.\n");
        return 1;
    }

    // Encrypt the plaintext
    encrypt(plaintext, ciphertext, shift);
    printf("Encrypted Message: %s\n", ciphertext);

    // Decrypt the ciphertext
    decrypt(ciphertext, decryptedText, shift);
    printf("Decrypted Message: %s\n", decryptedText);

    return 0;
}
