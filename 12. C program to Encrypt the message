#include <stdio.h>
#include <string.h>

#define MOD 26

// Key matrix for encryption
int key[2][2] = { {9, 4}, {5, 7} };
// Inverse key matrix for decryption
int inverseKey[2][2] = { {7, 22}, {23, 9} };

// Function to multiply matrices and apply mod 26
void multiplyAndMod(int matrix[2][2], int input[2], int output[2]) {
    output[0] = (matrix[0][0] * input[0] + matrix[0][1] * input[1]) % MOD;
    output[1] = (matrix[1][0] * input[0] + matrix[1][1] * input[1]) % MOD;
}

// Convert characters to numbers
int charToNum(char c) {
    return c - 'a';
}

// Convert numbers to characters
char numToChar(int n) {
    return (char)(n + 'a');
}

// Encrypt the plaintext message
void encrypt(char *plaintext, char *ciphertext) {
    int len = strlen(plaintext);
    for (int i = 0; i < len; i += 2) {
        int input[2] = { charToNum(plaintext[i]), charToNum(plaintext[i+1]) };
        int output[2];
        multiplyAndMod(key, input, output);
        ciphertext[i] = numToChar(output[0]);
        ciphertext[i+1] = numToChar(output[1]);
    }
    ciphertext[len] = '\0';
}

// Decrypt the ciphertext message
void decrypt(char *ciphertext, char *decryptedtext) {
    int len = strlen(ciphertext);
    for (int i = 0; i < len; i += 2) {
        int input[2] = { charToNum(ciphertext[i]), charToNum(ciphertext[i+1]) };
        int output[2];
        multiplyAndMod(inverseKey, input, output);
        decryptedtext[i] = numToChar(output[0]);
        decryptedtext[i+1] = numToChar(output[1]);
    }
    decryptedtext[len] = '\0';
}

int main() {
    char plaintext[] = "meetmeattheusualplaceattenratherthaneightoclock";
    char ciphertext[50], decryptedtext[50];

    encrypt(plaintext, ciphertext);
    printf("Ciphertext: %s\n", ciphertext);

    decrypt(ciphertext, decryptedtext);
    printf("Decrypted text: %s\n", decryptedtext);

    return 0;
}
