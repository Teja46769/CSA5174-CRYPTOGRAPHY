 #include <stdio.h>
#include <string.h>

#define MAX_LENGTH 500

void displayDecryption(const char* ciphertext, char* mapping) {
    printf("Decrypted Text: ");
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (mapping[ciphertext[i]] != 0) {
            printf("%c", mapping[ciphertext[i]]);
        } else {
            printf("%c", ciphertext[i]);
        }
    }
    printf("\n");
}

void addSubstitution(char symbol, char substitution, char* mapping) {
    mapping[(int)symbol] = substitution;
}

int main() {
    char ciphertext[MAX_LENGTH] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    char mapping[256] = {0};  // Stores substitution for each character

    printf("Ciphertext: %s\n", ciphertext);
    
    char symbol, substitution;
    while (1) {
        printf("Enter symbol to substitute (or 0 to finish): ");
        scanf(" %c", &symbol);
        if (symbol == '0') break;

        printf("Enter substitution letter for %c: ", symbol);
        scanf(" %c", &substitution);
        addSubstitution(symbol, substitution, mapping);

        displayDecryption(ciphertext, mapping);
    }

    return 0;
}
